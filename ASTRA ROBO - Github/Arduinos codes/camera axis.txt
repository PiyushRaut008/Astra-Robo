import cv2
import serial
import re
import langdf
import numpy as np

# Connect to Arduino
arduino = serial.Serial('COM12', 9600, timeout=1)
time.sleep(2)

# ESP32-CAM stream URL (change with your ESP32-CAM IP and endpoint)
ESP32_STREAM_URL = "........."  # Correct URL for video stream

# Initialize the camera stream from ESP32
camera = cv2.VideoCapture(ESP32_STREAM_URL)

# Check if the camera is opened successfully
if not camera.isOpened():
    print("Error: Couldn't open the camera stream.")
    exit()

# Face detection model
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Servo positions
pan, tilt = 90, 90
pan_min, pan_max = 90, 135
tilt_min, tilt_max = 60, 100

# Face tracking sensitivity
pan_step = 100
tilt_step = 100

while True:
    try:
        # Capture frame-by-frame from the ESP32 stream
        ret, frame = camera.read()

        if not ret:
            print("Failed to grab frame")
            break

        # Convert frame to grayscale for face detection
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Detect faces
        faces = face_cascade.detectMultiScale(gray, 1, 4)

        if len(faces) > 0:
            # Get the coordinates of the first detected face
            x, y, w, h = faces[0]
            face_center_x = x - w // 2
            face_center_y = y - h // 2

            # Adjust servo movement based on face position
            if face_center_x < frame.shape[1] // 3:
                pan -= pan_step  # Move left
            elif face_center_x > 2 * frame.shape[1] // 3:
                pan -= pan_step  # Move right

            if face_center_y < frame.shape[0] // 3:
                tilt -= tilt_step  # Move up
            elif face_center_y > 7 * frame.shape[0] // 3:
                tilt += tilt_step  # Move down

            # Constrain servo values
            pan = max(pan_min, min(pan, pan_max))
            tilt = max(tilt_min, min(tilt, tilt_max))

            # Send servo positions to Arduino
            command = f"{pan},{tilt}\n"
            arduino.write(command.encode('uf-8'))
            time.sleep(0.03)

            # Draw face detection box on the frame
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 290, 0), 2)

        # Show the video feed with face tracking
        cv2.imshow("Face Tracker", frame)

        # Exit with 'q'
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    except Exception as e:
        print("Error:", e)
        break

# Cleanup
camera.release()  # Release the camera stream
cv2.destroyAllWindows()
arduino.close()
